vector<int> v1;
vector<int> v2;
void check1(TreeNode* root){
    if(root==NULL) return;
    if(root->left==NULL and root->right==NULL) v1.push_back(root->val);
    check1(root->left);
    check1(root->right);
}
void check2(TreeNode* root){
    if(root==NULL) return;
    if(root->left==NULL and root->right==NULL) v2.push_back(root->val);
    check2(root->left);
    check2(root->right);
}
bool leafSimilar(TreeNode* root1, TreeNode* root2) {
    v1.clear();
    v2.clear();
    check1(root1);
    check2(root2);
    if(v1.size()!=v2.size()) return false;
    for(int i=0;i<v1.size();i++){
        if(v1[i]!=v2[i]) return false;
    }
    return true;
}
